<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0515.2100                               -->
<workbook original-version='10.3' source-build='10.3.0 (10300.17.0515.2100)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Taxi_Trip_Sample' inline='true' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Taxi_Trip_Sample' name='textscan.15rfxw20ahpkpg18iszss0nif6o7'>
            <connection class='textscan' directory='C:/Users/hfeinstein/Desktop' filename='Taxi_Trip_Sample.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.15rfxw20ahpkpg18iszss0nif6o7' name='Taxi_Trip_Sample.csv' table='[Taxi_Trip_Sample#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='integer' name='dropoff_census_tract' ordinal='1' />
            <column datatype='real' name='dropoff_centroid_latitude' ordinal='2' />
            <column datatype='string' name='dropoff_centroid_location' ordinal='3' />
            <column datatype='real' name='dropoff_centroid_longitude' ordinal='4' />
            <column datatype='integer' name='dropoff_community_area' ordinal='5' />
            <column datatype='real' name='extras' ordinal='6' />
            <column datatype='real' name='fare' ordinal='7' />
            <column datatype='string' name='payment_type' ordinal='8' />
            <column datatype='integer' name='pickup_census_tract' ordinal='9' />
            <column datatype='real' name='pickup_centroid_latitude' ordinal='10' />
            <column datatype='string' name='pickup_centroid_location' ordinal='11' />
            <column datatype='real' name='pickup_centroid_longitude' ordinal='12' />
            <column datatype='integer' name='pickup_community_area' ordinal='13' />
            <column datatype='string' name='taxi_id' ordinal='14' />
            <column datatype='real' name='tips' ordinal='15' />
            <column datatype='integer' name='tolls' ordinal='16' />
            <column datatype='datetime' name='trip_end_timestamp' ordinal='17' />
            <column datatype='string' name='trip_id' ordinal='18' />
            <column datatype='real' name='trip_miles' ordinal='19' />
            <column datatype='integer' name='trip_seconds' ordinal='20' />
            <column datatype='datetime' name='trip_start_timestamp' ordinal='21' />
            <column datatype='real' name='trip_total' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_census_tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dropoff_census_tract]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>dropoff_census_tract</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_centroid_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dropoff_centroid_latitude]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>dropoff_centroid_latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_centroid_location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_centroid_location]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>dropoff_centroid_location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_centroid_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dropoff_centroid_longitude]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>dropoff_centroid_longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_community_area</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dropoff_community_area]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>dropoff_community_area</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extras</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extras]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>extras</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fare]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>fare</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[payment_type]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>payment_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_census_tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pickup_census_tract]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>pickup_census_tract</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_centroid_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pickup_centroid_latitude]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>pickup_centroid_latitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_centroid_location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pickup_centroid_location]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>pickup_centroid_location</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_centroid_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pickup_centroid_longitude]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>pickup_centroid_longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_community_area</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pickup_community_area]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>pickup_community_area</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxi_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taxi_id]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>taxi_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tips]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>tips</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tolls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tolls]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>tolls</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_end_timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[trip_end_timestamp]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>trip_end_timestamp</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_id]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>trip_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_miles]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>trip_miles</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_seconds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_seconds]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>trip_seconds</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_start_timestamp</remote-name>
            <remote-type>135</remote-type>
            <local-name>[trip_start_timestamp]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>trip_start_timestamp</remote-alias>
            <ordinal>21</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_total]</local-name>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias>trip_total</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Taxi_Trip_Sample.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Dropoff Census Tract' datatype='integer' name='[dropoff_census_tract]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Dropoff Centroid Latitude' datatype='real' name='[dropoff_centroid_latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Dropoff Centroid Location' datatype='string' name='[dropoff_centroid_location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Dropoff Centroid Longitude' datatype='real' name='[dropoff_centroid_longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Sum' caption='Dropoff Community Area' datatype='integer' name='[dropoff_community_area]' role='dimension' type='ordinal' />
      <column caption='Extras' datatype='real' name='[extras]' role='measure' type='quantitative' />
      <column caption='Fare' datatype='real' name='[fare]' role='measure' type='quantitative' />
      <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Pickup Census Tract' datatype='integer' name='[pickup_census_tract]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Pickup Centroid Latitude' datatype='real' name='[pickup_centroid_latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Pickup Centroid Location' datatype='string' name='[pickup_centroid_location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Pickup Centroid Longitude' datatype='real' name='[pickup_centroid_longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Sum' caption='Pickup Community Area' datatype='integer' name='[pickup_community_area]' role='dimension' type='ordinal' />
      <column caption='Taxi Id' datatype='string' name='[taxi_id]' role='dimension' type='nominal' />
      <column caption='Tips' datatype='real' name='[tips]' role='measure' type='quantitative' />
      <column caption='Tolls' datatype='integer' name='[tolls]' role='measure' type='quantitative' />
      <column caption='Trip End Timestamp' datatype='datetime' name='[trip_end_timestamp]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
      <column caption='Trip Miles' datatype='real' name='[trip_miles]' role='measure' type='quantitative' />
      <column caption='Trip Seconds' datatype='integer' name='[trip_seconds]' role='measure' type='quantitative' />
      <column caption='Trip Start Timestamp' datatype='datetime' name='[trip_start_timestamp]' role='dimension' type='ordinal' />
      <column caption='Trip Total' datatype='real' name='[trip_total]' role='measure' type='quantitative' />
      <column-instance column='[fare]' derivation='Avg' name='[avg:fare:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tips]' derivation='Avg' name='[avg:tips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[extras]' derivation='Sum' name='[sum:extras:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fare]' derivation='Sum' name='[sum:fare:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tips]' derivation='Sum' name='[sum:tips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tolls]' derivation='Sum' name='[sum:tolls:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trip_miles]' derivation='Sum' name='[sum:trip_miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trip_seconds]' derivation='Sum' name='[sum:trip_seconds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trip_total]' derivation='Sum' name='[sum:trip_total:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/hfeinstein/Desktop/Taxi_Trip_Sample.tde' schema='Extract' tablename='Extract' update-time='07/18/2017 03:20:24 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1000' timestamp-start='2017-07-18 15:20:24.893' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company</remote-alias>
              <ordinal>1</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2809 - 95474 C &amp; D Cab Co Inc.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Top Cab Affiliation&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>612</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dropoff_census_tract</remote-name>
              <remote-type>20</remote-type>
              <local-name>[dropoff_census_tract]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dropoff_census_tract</remote-alias>
              <ordinal>2</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10917091318593.0</statistic>
                <statistic aggregation='Avg' datatype='real'>17031343710.75351</statistic>
                <statistic aggregation='Min' datatype='integer'>17031010502</statistic>
                <statistic aggregation='Max' datatype='integer'>17031980100</statistic>
                <statistic aggregation='Stdev' datatype='real'>330192.44334281248</statistic>
                <statistic aggregation='StdevP' datatype='real'>329934.78240357881</statistic>
                <statistic aggregation='Var' datatype='real'>109027049640.69641</statistic>
                <statistic aggregation='VarP' datatype='real'>108856960639.69688</statistic>
                <statistic aggregation='Count' datatype='integer'>641</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.8593273463841795e+23</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dropoff_centroid_latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[dropoff_centroid_latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dropoff_centroid_latitude</remote-alias>
              <ordinal>3</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>123</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>40813.614676829922</statistic>
                <statistic aggregation='Avg' datatype='real'>41.903095150749408</statistic>
                <statistic aggregation='Min' datatype='real'>41.741242730000003</statistic>
                <statistic aggregation='Max' datatype='real'>42.009622880000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.039390700732906465</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.039370474441081035</statistic>
                <statistic aggregation='Var' datatype='real'>0.0015516273042293978</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0015500342577158153</statistic>
                <statistic aggregation='Count' datatype='integer'>974</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1710218.2889825937</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dropoff_centroid_location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dropoff_centroid_location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dropoff_centroid_location</remote-alias>
              <ordinal>4</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>123</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;{&apos;coordinates&apos;: [-87.551428, 41.741243], &apos;type&apos;: &apos;Point&apos;}&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;{&apos;coordinates&apos;: [-87.913625, 41.980264], &apos;type&apos;: &apos;Point&apos;}&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>974</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dropoff_centroid_longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[dropoff_centroid_longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dropoff_centroid_longitude</remote-alias>
              <ordinal>5</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>123</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-85374.095039289939</statistic>
                <statistic aggregation='Avg' datatype='real'>-87.65307498900404</statistic>
                <statistic aggregation='Min' datatype='real'>-87.913624600000006</statistic>
                <statistic aggregation='Max' datatype='real'>-87.551428200000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.053791002413786891</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.053763381871573625</statistic>
                <statistic aggregation='Var' datatype='real'>0.0028934719406800268</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0028905012302686511</statistic>
                <statistic aggregation='Count' datatype='integer'>974</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7483304.7699454371</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dropoff_community_area</remote-name>
              <remote-type>16</remote-type>
              <local-name>[dropoff_community_area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dropoff_community_area</remote-alias>
              <ordinal>6</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>20552.0</statistic>
                <statistic aggregation='Avg' datatype='real'>21.122302158273381</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>77</statistic>
                <statistic aggregation='Stdev' datatype='real'>17.819350871356335</statistic>
                <statistic aggregation='StdevP' datatype='real'>17.810191605332871</statistic>
                <statistic aggregation='Var' datatype='real'>317.5292654765077</statistic>
                <statistic aggregation='VarP' datatype='real'>317.20292501866953</statistic>
                <statistic aggregation='Count' datatype='integer'>973</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>742744.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extras</remote-name>
              <remote-type>5</remote-type>
              <local-name>[extras]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>extras</remote-alias>
              <ordinal>7</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>842.34999999999991</statistic>
                <statistic aggregation='Avg' datatype='real'>0.84234999999999993</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>28.800000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.6751565081588129</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.6743187204054073</statistic>
                <statistic aggregation='Var' datatype='real'>2.8061493268268269</statistic>
                <statistic aggregation='VarP' datatype='real'>2.8033431775000004</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3512.8967000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare</remote-name>
              <remote-type>5</remote-type>
              <local-name>[fare]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare</remote-alias>
              <ordinal>8</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11603.54000000001</statistic>
                <statistic aggregation='Avg' datatype='real'>11.60354000000001</statistic>
                <statistic aggregation='Min' datatype='real'>3.25</statistic>
                <statistic aggregation='Max' datatype='real'>70.849999999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.05327956929967</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.048251672226352</statistic>
                <statistic aggregation='Var' datatype='real'>101.06843009849815</statistic>
                <statistic aggregation='VarP' datatype='real'>100.96736166839966</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>235609.5021999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payment_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[payment_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payment_type</remote-alias>
              <ordinal>9</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cash&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unknown&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pickup_census_tract</remote-name>
              <remote-type>20</remote-type>
              <local-name>[pickup_census_tract]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pickup_census_tract</remote-alias>
              <ordinal>10</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10951145648899.0</statistic>
                <statistic aggregation='Avg' datatype='real'>17031330713.684292</statistic>
                <statistic aggregation='Min' datatype='integer'>17031010502</statistic>
                <statistic aggregation='Max' datatype='integer'>17031980100</statistic>
                <statistic aggregation='Stdev' datatype='real'>327887.87448349519</statistic>
                <statistic aggregation='StdevP' datatype='real'>327632.80803144746</statistic>
                <statistic aggregation='Var' datatype='real'>107510458233.30429</statistic>
                <statistic aggregation='VarP' datatype='real'>107343256898.5713</statistic>
                <statistic aggregation='Count' datatype='integer'>643</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.8651258330914537e+23</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pickup_centroid_latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pickup_centroid_latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pickup_centroid_latitude</remote-alias>
              <ordinal>11</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>41735.60887231995</statistic>
                <statistic aggregation='Avg' datatype='real'>41.903221759357379</statistic>
                <statistic aggregation='Min' datatype='real'>41.778876859999997</statistic>
                <statistic aggregation='Max' datatype='real'>42.009622880000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.039775751327302752</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.039755778566150264</statistic>
                <statistic aggregation='Var' datatype='real'>0.0015821103936514266</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0015805219294007726</statistic>
                <statistic aggregation='Count' datatype='integer'>996</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1748858.0480384678</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pickup_centroid_location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pickup_centroid_location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pickup_centroid_location</remote-alias>
              <ordinal>12</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;{&apos;coordinates&apos;: [-87.583144, 41.790506], &apos;type&apos;: &apos;Point&apos;}&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;{&apos;coordinates&apos;: [-87.913625, 41.980264], &apos;type&apos;: &apos;Point&apos;}&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pickup_centroid_longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[pickup_centroid_longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pickup_centroid_longitude</remote-alias>
              <ordinal>13</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-87308.539036909904</statistic>
                <statistic aggregation='Avg' datatype='real'>-87.659175739869383</statistic>
                <statistic aggregation='Min' datatype='real'>-87.913624600000006</statistic>
                <statistic aggregation='Max' datatype='real'>-87.583143719999995</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.069725039897023847</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.069690028576766136</statistic>
                <statistic aggregation='Var' datatype='real'>0.004861581188641567</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0048567000830304812</statistic>
                <statistic aggregation='Count' datatype='integer'>996</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7653399.4043010147</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pickup_community_area</remote-name>
              <remote-type>16</remote-type>
              <local-name>[pickup_community_area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pickup_community_area</remote-alias>
              <ordinal>14</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>22030.0</statistic>
                <statistic aggregation='Avg' datatype='real'>22.11847389558233</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>77</statistic>
                <statistic aggregation='Stdev' datatype='real'>19.720306094037536</statistic>
                <statistic aggregation='StdevP' datatype='real'>19.710403855856562</statistic>
                <statistic aggregation='Var' datatype='real'>388.89047244253396</statistic>
                <statistic aggregation='VarP' datatype='real'>388.50002016096516</statistic>
                <statistic aggregation='Count' datatype='integer'>996</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>874216.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taxi_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taxi_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taxi_id</remote-alias>
              <ordinal>15</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>841</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;008ca9f6e7dff925f1a18284fb269fc3c781977db68d1580f0b02842003a66b390ad28ce875fd7fdcca3880c12bbeab9beb1404c32bd0ae39f5f8ae22d90d&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ffd231d2536b9463d888cfbb42f36d543b37d22d96a6dde45e498b5a95c02eec3568706ca4026eb8557f104328406a30004a5464c71e60b2d011e17ad01c0&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tips</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tips</remote-alias>
              <ordinal>16</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>79</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>925.89999999999986</statistic>
                <statistic aggregation='Avg' datatype='real'>0.92589999999999983</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>10.199999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7645549705929382</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7636724724279167</statistic>
                <statistic aggregation='Var' datatype='real'>3.1136542442442452</statistic>
                <statistic aggregation='VarP' datatype='real'>3.1105405900000007</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3967.8314000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tolls</remote-name>
              <remote-type>16</remote-type>
              <local-name>[tolls]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tolls</remote-alias>
              <ordinal>17</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>0.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_end_timestamp</remote-name>
              <remote-type>135</remote-type>
              <local-name>[trip_end_timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_end_timestamp</remote-alias>
              <ordinal>18</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>601</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-12-25 02:45:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-01-05 23:30:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trip_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_id</remote-alias>
              <ordinal>19</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1000</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;46bef77e6eb996495325bf28bcc854e353bc0b0a&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;47d3782f9a7e8f8d1fc0ecf6cea658dfdec56291&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_miles</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_miles]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_miles</remote-alias>
              <ordinal>20</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>152</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2779.8499999999972</statistic>
                <statistic aggregation='Avg' datatype='real'>2.779849999999997</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>36.100000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.6217314590074512</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.6194200152724765</statistic>
                <statistic aggregation='Var' datatype='real'>21.360401679179144</statistic>
                <statistic aggregation='VarP' datatype='real'>21.339041277499966</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29066.607299999952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_seconds</remote-name>
              <remote-type>3</remote-type>
              <local-name>[trip_seconds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_seconds</remote-alias>
              <ordinal>21</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>779100.0</statistic>
                <statistic aggregation='Avg' datatype='real'>779.10000000000002</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>79500</statistic>
                <statistic aggregation='Stdev' datatype='real'>2564.1455560151871</statistic>
                <statistic aggregation='StdevP' datatype='real'>2562.8631625586254</statistic>
                <statistic aggregation='Var' datatype='real'>6574842.4324324327</statistic>
                <statistic aggregation='VarP' datatype='real'>6568267.5899999999</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7175264400.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_start_timestamp</remote-name>
              <remote-type>135</remote-type>
              <local-name>[trip_start_timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_start_timestamp</remote-alias>
              <ordinal>22</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>584</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-12-25 02:30:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-01-05 23:15:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2015-12-31 14:30:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_total</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_total</remote-alias>
              <ordinal>23</ordinal>
              <family>Taxi_Trip_Sample.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>302</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>13371.790000000008</statistic>
                <statistic aggregation='Avg' datatype='real'>13.371790000000008</statistic>
                <statistic aggregation='Min' datatype='real'>3.25</statistic>
                <statistic aggregation='Max' datatype='real'>80.349999999999994</statistic>
                <statistic aggregation='Stdev' datatype='real'>11.612624179583015</statistic>
                <statistic aggregation='StdevP' datatype='real'>11.606816415188959</statistic>
                <statistic aggregation='Var' datatype='real'>134.85304033623609</statistic>
                <statistic aggregation='VarP' datatype='real'>134.71818729589987</statistic>
                <statistic aggregation='Count' datatype='integer'>1000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>313522.95510000008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.439216' measure-ordering='alphabetic' measure-percentage='0.560784' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:extras:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:tolls:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:tips:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:tips:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:trip_seconds:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:trip_miles:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:fare:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:trip_total:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column-instance column='[fare]' derivation='Avg' name='[avg:fare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tips]' derivation='Avg' name='[avg:tips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_start_timestamp]' derivation='Day' name='[dy:trip_start_timestamp:ok]' pivot='key' type='ordinal' />
            <column caption='Fare' datatype='real' name='[fare]' role='measure' type='quantitative' />
            <column caption='Tips' datatype='real' name='[tips]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
            <column caption='Trip Start Timestamp' datatype='datetime' name='[trip_start_timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:tips:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:tips:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[Multiple Values]</rows>
        <cols>([federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[dy:trip_start_timestamp:ok] / [federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Dropoff Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Dropoff Centroid Latitude' datatype='real' name='[dropoff_centroid_latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Dropoff Centroid Longitude' datatype='real' name='[dropoff_centroid_longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[dropoff_centroid_latitude]' derivation='None' name='[none:dropoff_centroid_latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dropoff_centroid_longitude]' derivation='None' name='[none:dropoff_centroid_longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_centroid_latitude:qk]</rows>
        <cols>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_centroid_longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Dropoff Rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column-instance column='[fare]' derivation='Avg' name='[avg:fare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_seconds]' derivation='Avg' name='[avg:trip_seconds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Dropoff Community Area' datatype='integer' name='[dropoff_community_area]' role='dimension' type='ordinal' />
            <column caption='Fare' datatype='real' name='[fare]' role='measure' type='quantitative' />
            <column-instance column='[trip_start_timestamp]' derivation='Hour' name='[hr:trip_start_timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dropoff_community_area]' derivation='None' name='[none:dropoff_community_area:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
            <column caption='Trip Seconds' datatype='integer' name='[trip_seconds]' role='measure' type='quantitative' />
            <column caption='Trip Start Timestamp' datatype='datetime' name='[trip_start_timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[hr:trip_start_timestamp:ok]'>
            <groupfilter function='empty-level' member='[hr:trip_start_timestamp:ok]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[hr:trip_start_timestamp:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:trip_seconds:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_community_area:ok]</rows>
        <cols>([federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk] + ([federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:trip_seconds:qk] + [federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Duration Fare'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column caption='Fare' datatype='real' name='[fare]' role='measure' type='quantitative' />
            <column-instance column='[pickup_community_area]' derivation='None' name='[none:pickup_community_area:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Pickup Community Area' datatype='integer' name='[pickup_community_area]' role='dimension' type='ordinal' />
            <column-instance column='[fare]' derivation='Sum' name='[sum:fare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_seconds]' derivation='Sum' name='[sum:trip_seconds:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Seconds' datatype='integer' name='[trip_seconds]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_community_area:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:trip_seconds:qk]</rows>
        <cols>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:fare:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column-instance column='[fare]' derivation='Avg' name='[avg:fare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tips]' derivation='Avg' name='[avg:tips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
            <column caption='Fare' datatype='real' name='[fare]' role='measure' type='quantitative' />
            <column-instance column='[trip_start_timestamp]' derivation='Hour' name='[hr:trip_start_timestamp:ok]' pivot='key' type='ordinal' />
            <column caption='Tips' datatype='real' name='[tips]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
            <column caption='Trip Start Timestamp' datatype='datetime' name='[trip_start_timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:tips:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:tips:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[Multiple Values]</rows>
        <cols>([federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[hr:trip_start_timestamp:ok] / [federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column-instance column='[fare]' derivation='Avg' name='[avg:fare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tips]' derivation='Avg' name='[avg:tips:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
            <column caption='Fare' datatype='real' name='[fare]' role='measure' type='quantitative' />
            <column-instance column='[trip_start_timestamp]' derivation='Month' name='[mn:trip_start_timestamp:ok]' pivot='key' type='ordinal' />
            <column caption='Tips' datatype='real' name='[tips]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
            <column caption='Trip Start Timestamp' datatype='datetime' name='[trip_start_timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:tips:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:fare:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]&quot;</bucket>
              <bucket>&quot;[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[avg:tips:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[Multiple Values]</rows>
        <cols>([federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[mn:trip_start_timestamp:ok] / [federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='PickDrop'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Dropoff Community Area' datatype='integer' name='[dropoff_community_area]' role='dimension' type='ordinal' />
            <column-instance column='[dropoff_community_area]' derivation='None' name='[none:dropoff_community_area:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pickup_community_area]' derivation='None' name='[none:pickup_community_area:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Pickup Community Area' datatype='integer' name='[pickup_community_area]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]' />
              <size column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]' />
              <text column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_community_area:ok]' />
              <text column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_community_area:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Pickup Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pickup_centroid_latitude]' derivation='None' name='[none:pickup_centroid_latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pickup_centroid_longitude]' derivation='None' name='[none:pickup_centroid_longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Pickup Centroid Latitude' datatype='real' name='[pickup_centroid_latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Pickup Centroid Longitude' datatype='real' name='[pickup_centroid_longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_centroid_latitude:qk]</rows>
        <cols>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_centroid_longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Taxi_Trip_Sample' name='federated.1rrxwdr1ohh3ro1as6t9q0e85abf' />
          </datasources>
          <datasource-dependencies datasource='federated.1rrxwdr1ohh3ro1as6t9q0e85abf'>
            <column-instance column='[trip_id]' derivation='CountD' name='[ctd:trip_id:qk]' pivot='key' type='quantitative' />
            <column caption='Fare' datatype='real' name='[fare]' role='measure' type='quantitative' />
            <column-instance column='[trip_start_timestamp]' derivation='Month' name='[mn:trip_start_timestamp:ok]' pivot='key' type='ordinal' />
            <column-instance column='[fare]' derivation='Sum' name='[sum:fare:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Trip Id' datatype='string' default-role='measure' default-type='quantitative' name='[trip_id]' role='dimension' type='nominal' />
            <column caption='Trip Start Timestamp' datatype='datetime' name='[trip_start_timestamp]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:fare:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk] + [federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:fare:qk])</rows>
        <cols>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[mn:trip_start_timestamp:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:trip_id:nk]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[yr:trip_start_timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Duration Fare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_community_area:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_community_area:ok]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[sum:pickup_community_area:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pickup Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_centroid_latitude:qk]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_centroid_longitude:qk]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_centroid_latitude:qk]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_centroid_longitude:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dropoff Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_centroid_latitude:qk]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_centroid_longitude:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dropoff Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[hr:trip_start_timestamp:ok]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_community_area:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='PickDrop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[ctd:trip_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:dropoff_community_area:ok]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[none:pickup_community_area:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[yr:trip_start_timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[yr:trip_start_timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[:Measure Names]</field>
            <field>[federated.1rrxwdr1ohh3ro1as6t9q0e85abf].[yr:trip_start_timestamp:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Day' width='192'>
      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
      sf8fTT3lmS+HSYQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dropoff Map' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Duration Fare' width='192'>
      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
      uAtBEkCE2v8DNbIZrarBzwsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hour' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQZElEQVR4nO3d2XNUV37A8e/tTd0t9SK1Wq0dCQlJSAIBwgKBsTG2sVPJLIlTjitJJTVV
      eUmlKpk/I6lKVR5SeUkyNZOaByepqXFNMhkGbPCCwYBZtUsIgfbWvvZ+lzwwMF4mAcYXNeL8
      Pk+0Vbrn3uv+9j1X6j7SLMuyEEJBmqZpjnzvhBD5JAEIpUkAQmkSgFCaBCCU5sr3Djxv5m5f
      5b/PXiajeTn6+nfYt7MUsFhZnMcXiuJ1f/E1x2L05nmu9E9S1dpFV2MU3VVIwOf+jdteX1zA
      UxzF64SpwSv87PwA0dIajp/owOcNEfD+5u/7Kj25yrrpp6TI880PeJuTAGwW23WQVxaXGSto
      Yt/OIsbHJshkM6QTC9Q0eBmdGmczYdC+v4MiT47z56/x5p/9Je7sGh++9yPG3a288+3DTA4M
      kPNGaN9VQXxhmVRynfP//i6lJ97i5OEDVO/uos5s4XfbgtwbvE4qsoPZ0VmWE0lKQkVs5lzs
      2V3HaO9NsoUVtNWV0H+rB2dxDen+n3J6aSff+9YRVqZGSThC7G/bwdjgIKtpi7DfxQaFdNSX
      MDh0l4zDy972Fgpcz9+E4fk7omfKCj/+px+TLfAzMdxHcmmS/7k0hlef4vTHA4CH108e44Of
      /Bsf90wSCoaJxMoosFL03brBe+/+gN6hUX707s/QvCHCoSDRWAz3V/6vzUyMsLw0wy/P3oSl
      fj4d22To8zNcPHuK//j5Wf7zX/+Ri9eucu7yMLpuEAyFCZfG8Dl0hvtu8NMf/At98Tjvf/g5
      m/f66IunuHjmFHPxIT7tmSMxfp3LQ/G8nMGnTQJ4ysrq22mvL3t4ov3BYiJhP7mcDmTIUMrv
      v/0H3LlxiWBJMYFQiI0710hXHqSrOUo2Z1LVvIem2hqipQECoRL+rxdif7CU6vII4bIaomEv
      yc0ETV2v8dff/yta6ps5drCOM2dOEwhH8fkDJOeHSBU2091SQVa3KAqXUlkaIVpRTaTIi4FG
      IBwh5Pegm+ZWnbItJVOgp6C0vgWPIww4OfryXsBJ68EjhLwwM3Kda4FOvv1GB2BCaoZTp+P8
      4Z/+OVWFKabPXcM6doDK8csUNR+lvraGcGkWTYPOk2/y8dXz1L16klABtJV7AajffQBXUQTP
      4SDhUpMOK4i7uJtQrJbeix9xqSdB9/5GZmcWOfLSCcray6k9dZak/yDlvhu4Ww+xoyRCsKuD
      WJGToD9E7Eg3Pm2dOz2fUXb8RY63VeXxjD49mrwVYgtl1rizqLOzKoKW7315DLnEMrPrDmor
      wvneladC0zQtbwGk02m8Xm8+hhYCyPN7gVZXV/M1tBAPyU2wUJqiAZjMTcfR870b28xY3xXe
      f/8s/WMzGL/lxHlpfpr0M3TiFf0pkMnq8grBSICpmTi+cBmlAQ/Liwts5hxUV0VIJy18BZA1
      NdKrC6ymTapqqtFTSTYSCbxeH6FggHQigaewCOd2uKv9hhL4ee3VAwz3XGd2OUSQdZYSFjXV
      FaRW51nY0KmpKmN+egpnUSmRQieLiwvoTh/OXJKCcIz1pVnmVrOUlZdT4ncwMz2DN1RG0A0p
      PY3h8FMS8G3ZMSkawH2Z5AoDvbdYNgL83sstDN+ZxmsYFER0pvoNmmsdzGZd6LPDDE7GWc29
      QnpykKKqBvypCTKNe5gbu0fbnvZ8H8qW0RwuYtEy5pfucq1niIyRZamtm9xGnNKyKuIjN7jQ
      P4FD87C/o4mVjQxrC0PsqKthfHmCqFNH10x6b9ykrsTk0tAMjoIQ3bUl3Dac7G/avaXHo1wA
      lmmg62lWEmkcc2maO7q43dNP1uGmuq6BYHqNlGZhmAaJjXWylpNNR4wX9gWYWksQjFSzp6kO
      ckHOnz9P6c5OJV79H7CMHJPT04SjJXii9XS3VKFnMsyYxdTVVnDv+hjNB7op90MunaO2vooF
      t5Omxnp6R2ZwOf3sqN1BYn6WzUSW1oNHiRRoOBbmad23hxLn1s7KlbsHMLPrfPbpVWqamqiu
      qGDq7iiVjbso9BYRDhbiKykh6C6nyDXNvVWLWHkNEc8Gs8kC6isjlFdE0TQwHUU4NBf1O4rz
      fUhbJuzK8sGH5yms3k1NXTMtpRa9A7dxF8co92U5f+kWlXsPkJ4c4t7MKoHiMEVeD7FYGWgu
      YtFiAn4vVy98TKxpD81795MYH2RmKUFRrIKgY+tfSfL2e4B4PE55eXk+hrbFyvQd1lxR6mLB
      fO+K+C1pmqblbQqk6zobGxv5Gv4bcwXLiMC2PgaRx3sATdNwOJSbgYlnTN4CcDqdFBYW5mt4
      IQAFb4KF+CIJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0pT7RJj4
      5nJT0yz/8Ie2brP0+3+DMxCwdZuPQwIQT8xMpcj0D9i6TSuXs3V7j0umQEJpEoBQmj1TIHON
      c6c+w/T72d/VTbzvU6bWctS1HiSqLXF9YJy6tk4aKou3xaKwQh22BGCtLxBqOUxnQxisJJOu
      GK+dbMVp5Pj8+hgvvtRN360R9PLir/1xByHyyZYAdLzMj17hzF03+7s6SW/O8sHpcWoaO3D7
      CvEWFOIrMDBMC4z76+IZhkE2m7VjeLHFck/hhjWXy2Hm4flgSwBpw01X91GSc0PMxzepbdlL
      yGtwfWAWPykWl+dYS7lwOTVc2v0/5OZ0OvF45I+0bUeW+/H+GN+TcLvduPLwfLBlQlIUCjI5
      eJP5TJiWXTH0tVmu9U2yv7ODtvZd3B66R3P7blxyAyCeMbZcATSXj32Hjj58XNu0l9qmXz3w
      ROk+ErVjGCFsJ7ekQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEI
      pUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUZlMAWcYGB+gfHGYzY7CxPMvQyD1ypkU2tcbw
      0Ajrqfys/SjE/8eeAJJzjK9YFIfDuIwNeocmcRsL9AzPMtTbj+Yy6e0dwbBsGU0I29iyKkR2
      fY3Z+CQ+r5OQJ0SoqoaG2hjXLl/CKAyzq7GZ7M1r5AwL05KFsbY7WRjrK5yRJt7+Tivz924y
      NgVZjxdDX8d0BDCzGQwjh647cDg03A5ZGGu7k4WxviKzsciFj88xMJGgelcdvsQ075+9QlXz
      LmrCTj54/0NckSpZF1Q8c2y5AvhLKnn5ROXDx8UHj9L64EFoL2827LVjGCFsJ6/JQmkSgFCa
      BCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkA
      QmkSgFCaBCCUJgEIpdkWgGmm6bnRhw7c7b/CmTNnGJ5aIbU+xycffcrCRtquoYSwjU0BWEwO
      3GR8bg3dSrOW9PHK66/TVBmgv/8OHZ2t3O4bRJeV4cQzxqaV4eZYcZVTE1oAU2d5cZKPzi3S
      umcfrkAxoUAJIf8YumFhycpw256sDPcVk2N3mIpvsDg5i7uims5jx/FrST67eQef2yKV3iSZ
      ceJ0arg1WRluu3ueVoazJYCGfUdpwGRi9B7l1SXc6b3B1HKa9s5DeFMzXLxwhYb2TlyaHaMJ
      YR9bArjPQW3jTgB27z/M7gf/OdzAqxUN9g0jhI3kx6BCaRKAUJqNU6Dtwcpmmf/bv7N1m+E/
      +WMKGmSatx2pF4BpkhkYtHWb5mbC1u2JrSNTIKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMA
      hNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSrMtAMsySaczWICey5BIpjAtC9PQSSaS6IZp
      11BC2Ma2D8Rszo3w3tk7vP3OK9y6eJlkNk2s5TCuxUGmVlJ4S3ZwuKMRh6wMIZ4htgRg6SmG
      p1K01ZeRW1/DV9PEofooVy/fRPMFeeXEYfquXydrWri5fyUwTRNd1+0Y/sn21TBs36ZpGnk5
      lnwxnsI5NAwD8nAObQng7q3LzK07SM7OUhQNYjmKAAtwYFkP1kPU0ABNu38J0DTt4b+31FMZ
      M0/HkidP41jz9XywJYDq1hcoyWTpv2YRq65i5PJn/GIwReOB4zjn+/jFL04RqWnF49C+FIDT
      6bRj+CdiOuy/73c4HHk5lnxxPEfn0JYAPL5CPD4/R068BJrGCy+/9usvVnSzs+P+PxV6kRTb
      hI2rQmi/foLLM11sE/J7AKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQ
      SpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSrPlM8GZtTkuXe/FdBbReeggEzc+YXpd
      p671IBFrgRuDE+xoPcCu6gjyaWHxLLHlCuD0hek+dpwdxRZLa+vo7gpeO3mS5ooi7sY3OXb8
      KBuzE+iyOqJ4xthyBXB5Cui7cpbFdCH7GgpYSMzywS/vUtXYgdvnx+vx4/UYGKYFxv3VvwzD
      IJvN2jH8E7FyOdu3qeu5vBxLvuSewjnM5XKYeTiHtgSwubpEVXMXoYVRpsaXqdzVSkuBQc/t
      BfxWkvj8NKspN26nhlNzA+B0OvF4PHYM/0RM0/7LkMvlzsux5Ivldtu+TbfbjSsP59CWANwu
      GO7vQyuMsqe1krmxIfomsuw/0IErs0zPwDite/bglBsA8YyxJYCCogidh7ofPq5ubKO68VcP
      3KW80FVqxzBC2E5+DCqUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkS
      gFCaBCCUJgEIpUkAQmkSgFDaY30gxrIsDENH0xyAhsPpkNUdxHPhsQIwMiv889//AzWHXyOz
      6eC73z1mz0fJhMizx5oCGUYKZ0GQlalJUjlZ20Q8Px4rAI+/gje+9SoVlZWcePXg1179jWyC
      of4ehu5MYViwvjhN38AoOdMim1ylv2+AtZQ6y4aI7ePxrgDZFW5+3s/MvQHOfHIL4ytfz6Uz
      FBZH0TYnuDs5S9/IDAH3OreGZhjsHcBX5KavdwTDegpHIMQ38FhTeaenmDfeegszt8DPT41i
      As4vfN0bLGFt8CzxlJ8D5RbZqmp21MZYvHIJszBMfV0jqdVr5AwL05KFsbY7pRbGMvQsycQC
      H/zXOTaBnfte+to36bkcu184Tmj0JnNLCZK40LNrmI4gZjqDrmfJ6g4cDg23QxbG2u6UWhhr
      dvgqpy708WD2srSwjMGOL31jYnmKa72jWE4vHQdb0W7f4OxHo+ztfgnH4m3Onf2Ympb9uOW3
      DuIZ88gAqtuO8Bethxgf6mV6OUEoGv3ajUMoVs+JWP3Dx6UHjtDy4EGwnTd2ttu3x0LY6LFe
      kzOJKT48fZH4/DJ910e+dhMsxHb1yABM08RdUE7360dwpuIU11V+6QZYiO3skVOgid4LnO+P
      s7t9L0d/548oCQXkDUTiufHIAOo6jhGtnWNwaIhTPzlNJrCH773zirwVQjwXHvk8Xp+7y4VL
      N1hYXacw1szhjja5AojnxqN/D2C5aOt6kWhJMd4Ct7wLVDxXHhlAcXkNxVuxJ0LkgcxmhNIk
      AKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSvtfveKwOgvyJ7kAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PickDrop' width='192'>
      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
      /j3r/wFgn43nHoQGXwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pickup Map' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trend' width='190'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
